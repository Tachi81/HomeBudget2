@using HomeBudget2.Models
@model HomeBudget2.ViewModels.FinancialOperationViewModel
@{
    FinancialOperation financialOperation = Model.FinancialOperation;
}

@if (financialOperation.IsExpense)
{
    <h2>Expense</h2>
}
@if (financialOperation.IsIncome)
{
    <h2>Income</h2>

}
@if (financialOperation.IsTransfer)
{
    <h2>Transfer</h2>

}
<h3>Edit</h3>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>FinancialOperation</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.FinancialOperation.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.FinancialOperation.AmountOfMoney, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinancialOperation.AmountOfMoney, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FinancialOperation.AmountOfMoney, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinancialOperation.BankAccountId, "BankAccountId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BankAccountId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FinancialOperation.BankAccountId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinancialOperation.SubCategoryId, "SubCategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SubCategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FinancialOperation.SubCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinancialOperation.TargetBankAccountId, "TargetBankAccountId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TargetBankAccountId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FinancialOperation.TargetBankAccountId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinancialOperation.DateTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinancialOperation.DateTime, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.FinancialOperation.DateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinancialOperation.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinancialOperation.Note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FinancialOperation.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @if (Model.FinancialOperation.IsExpense)
    {
        @Html.ActionLink("Back to List", "ExpensesIndex")
    }
    @if (Model.FinancialOperation.IsIncome)
    {
        @Html.ActionLink("Back to List", "IncomesIndex")
    }
    @if (Model.FinancialOperation.IsTransfer)
    {
        @Html.ActionLink("Back to List", "TransfersIndex")
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
