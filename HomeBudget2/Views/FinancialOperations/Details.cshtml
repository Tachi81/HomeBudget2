@using HomeBudget2.Models
@model HomeBudget2.ViewModels.FinancialOperationViewModel

@helper ChooseSourceOfMoney(FinancialOperation financialOperation)
{
    if (financialOperation.IsExpense)
    {
        @Html.DisplayName("Source Account")
    }

    if (financialOperation.IsIncome)
    {
        @Html.DisplayName("Target Account")
    }

    if (financialOperation.IsTransfer)
    {
        @Html.DisplayName("Source Account")
    }
}

@helper ChooseTargetOfMoney(FinancialOperation financialOperation)
{
    if (financialOperation.IsExpense)
    {
        @Html.DisplayName("Expense SubCategory")
    }

    if (financialOperation.IsIncome)
    {
        @Html.DisplayName(" Source of Income")
    }

    if (financialOperation.IsTransfer)
    {
        @Html.DisplayName("Target Account")
    }
}

@{
    FinancialOperation financialOperation = Model.FinancialOperation;
}

@if (financialOperation.IsExpense)
{
    <h2>Expense</h2>
}
@if (financialOperation.IsIncome)
{
    <h2>Income</h2>

}
@if (financialOperation.IsTransfer)
{
    <h2>Transfer</h2>

}
<h3>Details</h3>


<div>

    <hr />
    <dl class="dl-horizontal">
        <dt>
            @ChooseSourceOfMoney(financialOperation)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FinancialOperation.SourceOfMoney)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FinancialOperation.AmountOfMoney)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FinancialOperation.AmountOfMoney)
        </dd>
        
        

        @if (financialOperation.IsExpense || financialOperation.IsIncome)
        {
            <dt>
                @if (financialOperation.IsExpense)
                {
                @Html.DisplayName("Expense Category")
                }

                @if (financialOperation.IsIncome)
                {
                @Html.DisplayName(" Income Category")
                }
            </dt>

            <dd>
                @Html.DisplayFor(model => model.FinancialOperation.SubCategory.Category.CategoryName)
            </dd>
       
        }
        
        <dt>
            @ChooseTargetOfMoney(financialOperation)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FinancialOperation.DestinationOfMoney)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FinancialOperation.DateTime)
        </dt>

        <dd>
            @Model.FinancialOperation.DateTime.ToString("dd/MM/yyyy")
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FinancialOperation.Note)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FinancialOperation.Note)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FinancialOperation.IsTransfer)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FinancialOperation.IsTransfer)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FinancialOperation.IsExpense)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FinancialOperation.IsExpense)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FinancialOperation.IsIncome)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FinancialOperation.IsIncome)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.FinancialOperation.Id }) |
    @if (Model.FinancialOperation.IsExpense)
    {
        @Html.ActionLink("Back to List", "ExpensesIndex")
    }
    @if (Model.FinancialOperation.IsIncome)
    {
        @Html.ActionLink("Back to List", "IncomesIndex")
    }
    @if (Model.FinancialOperation.IsTransfer)
    {
        @Html.ActionLink("Back to List", "TransfersIndex")
    }
</p>
