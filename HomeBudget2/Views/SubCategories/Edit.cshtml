@model HomeBudget2.ViewModels.SubCategoryViewModel

@if (Model.SubCategory.IsExpense)
{
    <h2>Expense SubCategories</h2>
}
@if (Model.SubCategory.IsIncome)
{
    <h2>Income SubCategories</h2>
}

<h3>Edit</h3>


@using (Html.BeginForm("Edit", "SubCategories", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>SubCategory</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.SubCategory.Id)
        @Html.HiddenFor(model => model.SubCategory.IsExpense)
        @Html.HiddenFor(model => model.SubCategory.IsIncome)
        <div class="form-group">
            @Html.LabelFor(model => model.SubCategory.SubCategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SubCategory.SubCategoryName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubCategory.SubCategoryName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubCategory.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SubCategory.CategoryId, Model.SelectListOfCategories, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubCategory.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@if (Model.SubCategory.IsExpense)
{
    <div>
        @Html.ActionLink("Back to List", "ExpenseSubCategoryIndex")
    </div>
}
@if (Model.SubCategory.IsIncome)
{
    <div>
        @Html.ActionLink("Back to List", "IncomeSubCategoryIndex")
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
